@using HandmadeShop.Web.Pages.Product

<div class="d-flex mt-5">
    
    @* <MudRangeSlider *@
    @*     ValueChanged="VChange" *@
    @*     Variant="Variant.Filled" *@
    @*     Value="@value" *@
    @*     UpperValue="@upperValue" *@
    @*     Range="true">Range</MudRangeSlider> *@
    
    
    <MudSlider  T="int" Value="From.Value" @oninput="@OnMinRangeChange"  Min="_minValue" Max="@Average"/>
    <MudSlider T="int" Value="To.Value" @oninput="@((e) => OnMaxRangeChange(e))" Min="Average" Max="@_maxValue"/>
</div>

<MudNumericField @bind-Value="From" TextChanged="OnMinInputChange" Label="От" Variant="Variant.Text" Min="0" />
<MudNumericField @bind-Value="To" TextChanged="OnMaxInputChang" Label="До" Variant="Variant.Text" Min="0" />



@code{
    [Parameter] public int MinValue { get; set; } = 100;
    [Parameter] public int MaxValue { get; set; } = 1000;

    public double value = 50.0;
    public double upperValue = 75.0;
    
    [Parameter] public int? From { get; set; }
    [Parameter] public int? To { get; set; }
    
    [Parameter] public EventCallback<Price> OnChangeCallback { get; set; }

    private int Average => (int)((double)(_maxValue + _minValue) / 2);
    private int _maxValue;
    private int _minValue;

    protected void VChange(double a)
    {
        Console.WriteLine("v change");
    }
    
    protected override async Task OnParametersSetAsync()
    {
        Console.WriteLine("on parameter call");
        _maxValue = MaxValue;
        _minValue = MinValue;

        if (From == null)
        {
            From = MinValue;
            To = MaxValue;
        }
    }

    protected void OnMinRangeChange(ChangeEventArgs e)
    {
        From = int.Parse(e.Value.ToString());
        Console.WriteLine("on min range change");
        CallEvent();
    }

    protected void OnMaxRangeChange(ChangeEventArgs e)
    {
        Console.WriteLine("on max range change");
        To = int.Parse(e.Value.ToString());
        CallEvent();
    }

    protected void OnMinInputChange(string value)
    {
        Console.WriteLine("on min input change");
        From = int.Parse(value);
        CallEvent();
    }

    protected void OnMaxInputChang(string value)
    {
        Console.WriteLine("on max input change");
        To = int.Parse(value);
        CallEvent();
    }

    protected void CallEvent()
    {
        var price = new Price()
        {
            From = From.Value,
            To = To.Value,
        };

        OnChangeCallback.InvokeAsync(price);
    }
}