@page "/reset-password"
@using System.ComponentModel.DataAnnotations
@inherits ResetPasswordBase

@* <MudStack Row="true" Justify="Justify.Center" Class="pa-6 mt-6"> *@
@*     <MudPaper Class="pa-6" Elevation="2"> *@
@*         <EditForm Model="@Model" OnValidSubmit="OnValidSubmit"> *@
@*             <MudText Typo="Typo.h4" GutterBottom="true" Class="mb-3">Сброс пароля</MudText> *@
@*             <MudText Typo="Typo.body1" Align="Align.Center" GutterBottom="true" Class="mb-3">Введите и подтвердите новый пароль</MudText> *@
@* *@
@*             <MudTextField T="string" *@
@*                           @bind-Value="Model.Password" For="@(() => Model.Password)" *@
@*                           Label="Password" *@
@*                           HelperText="Input your password" *@
@*                           Required="true" *@
@*                           RequiredError="Password is required" *@
@*                           Validation="@(new CompareAttribute("ConfirmPassword"){ ErrorMessage = "Password and Confirmation Password must match."})"/> *@
@*              *@
@*             <MudTextField T="string" *@
@*                           @bind-Value="Model.ConfirmPassword" For="@(() => Model.ConfirmPassword)" *@
@*                           Label="Confirmation Password" *@
@*                           HelperText="Confirm your password" *@
@*                           Required="true" *@
@*                           RequiredError="Confirmation Password is required" *@
@*                           Validation="@(new CompareAttribute("Password"){ ErrorMessage = "Password and Confirmation Password must match."})"/> *@
@* *@
@*              *@
@*             <div class="justify-content-center mt-4"> *@
@*                 <MudButton Variant="Variant.Filled" *@
@*                            Color="Color.Primary" *@
@*                            Size="Size.Large" *@
@*                            ButtonType="ButtonType.Submit">Сбросить</MudButton> *@
@*                  *@
@*                 <MudText Align="Align.Center" Class="mt-4">Нет аккаунта? <MudLink Href="/register">Зарегистрируйтесь</MudLink></MudText> *@
@*                 <MudText Align="Align.Center" Class="mt-4">Уже есть аккаунт? <MudLink Href="/login">Войти</MudLink></MudText> *@
@*             </div> *@
@*             *@
@*         </EditForm> *@
@*     </MudPaper> *@
@* </MudStack> *@

@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations

<MudStack Row="true" Justify="Justify.Center" Class="pa-6 mt-6">
    <MudItem xs="6" sm="4">
        <MudPaper Class="pa-4">
            <MudForm @ref="Form" @bind-IsValid="@IsSuccess" @bind-Errors="@ValidationErrors">
                <MudText Typo="Typo.h4" Align="Align.Center" GutterBottom="true" Class="mb-3">Сброс пароля</MudText>
                <MudText Typo="Typo.body1" Align="Align.Center" GutterBottom="true" Class="mb-3">Введите и подтвердите новый пароль</MudText> 
                
                <MudAlert Severity="Severity.Error" Class="@(ShowErrors ? "mb-3 d-block" : "d-none")">
                    @ErrorDetail
                </MudAlert>
                
                <MudTextField T="string"
                              Label="Password"
                              HelperText="Choose a strong password"
                              @bind-Value="Model.Password" For="@(() => Model.Password)"
                              InputType="InputType.Password"
                              Required="true"
                              RequiredError="Password is required!"/>

                <MudTextField T="string"
                              Label="Confirmation Password"
                              @bind-Value="Model.ConfirmPassword" For="@(() => Model.ConfirmPassword)"
                              HelperText="Repeat the password"
                              InputType="InputType.Password"
                              Validation="@(new Func<string, string>(PasswordMatch))"/>


                <div class="justify-content-center mt-4">
                    <MudButton Variant="Variant.Filled"
                               Color="Color.Primary"
                               Disabled="@(!IsSuccess)"
                               Size="Size.Large"
                               OnClick="@(async () => await OnValidSubmit())"
                               Class="ml-auto">Сохранить</MudButton>

                    <MudText Align="Align.Center" Class="mt-4">Нет аккаунта? <MudLink Href="/register">Зарегистрируйтесь</MudLink></MudText>
                    <MudText Align="Align.Center" Class="mt-4">Уже есть аккаунт? <MudLink Href="/login">Войти</MudLink></MudText>
                </div>
            </MudForm>   
        </MudPaper>
    </MudItem>
</MudStack>


@* @code { *@
@*     bool success; *@
@*     string[] errors = { }; *@
@*     MudTextField<string> pwField1; *@
@*     MudForm form; *@
@* *@
@*     private IEnumerable<string> PasswordStrength(string pw) *@
@*     { *@
@*         if (string.IsNullOrWhiteSpace(pw)) *@
@*         { *@
@*             yield return "Password is required!"; *@
@*             yield break; *@
@*         } *@
@*         if (pw.Length < 8) *@
@*             yield return "Password must be at least of length 8"; *@
@*         if (!Regex.IsMatch(pw, @"[A-Z]")) *@
@*             yield return "Password must contain at least one capital letter"; *@
@*         if (!Regex.IsMatch(pw, @"[a-z]")) *@
@*             yield return "Password must contain at least one lowercase letter"; *@
@*         if (!Regex.IsMatch(pw, @"[0-9]")) *@
@*             yield return "Password must contain at least one digit"; *@
@*     } *@
@* *@
@*     private string PasswordMatch(string arg) *@
@*     { *@
@*         if (pwField1.Value != arg) *@
@*             return "Passwords don't match"; *@
@*         return null; *@
@*     } *@
@* *@
@* } *@

