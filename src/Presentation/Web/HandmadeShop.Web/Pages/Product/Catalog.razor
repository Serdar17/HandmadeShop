@page "/catalog/{CatalogName}"
@inherits CatalogBase
@layout MainLayout
@attribute [Authorize]

@if (PagedList is null)
{
   <MudProgressCircular Class="spinner" Color="Color.Default" Indeterminate="true" />
    
    @* @for (var i = 0; i < @PageSize; i++) *@
    @* { *@
    @*     <MudSkeleton /> *@
    @*     <MudSkeleton SkeletonType="SkeletonType.Circle" Width="50px" Height="50px" /> *@
    @*     <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="200px" Height="110px" /> *@
    @* } *@

}

else
{
    <div class="d-flex mt-5 mb-5">
        <MudText Class="mr-3" Style="font-weight: bold;" Typo="Typo.h5">@CatalogName</MudText>
        <MudText Typo="Typo.h6">Страница - @Page</MudText>
        <div class="d-flex align-items-center justify-content-center ml-3">
            <MudText>Всего товаров: @PagedList.TotalCount</MudText>
        </div>
        
    </div>


    <MudGrid>
        <MudItem xs="3">
            <MudSelect T="SortItem" Value="SortItem" ValueChanged="@SelectedSort" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">
                @foreach (var item in @SortItems)
                {
                    <MudSelectItem Value="item"/>
                }
            </MudSelect>
            
            <MudText Class="mt-4 mb-2" Typo="Typo.body1" Style="font-weight: bold;">Цена</MudText>
            
            <div class="d-flex justify-content-center align-items-center">
                <MudNumericField T="int?"
                                 HideSpinButtons="false"
                                 Class="p-1"
                                 Label="От"
                                 Value="@PriceFrom"
                                 Variant="Variant.Outlined"
                                 ValueChanged="@(async (e) => await PriceChanged(e.Value, false))"
                                 Min="@PagedList.MinPrice"
                                 Max="@PagedList.MaxPrice"/>
                
                            
                <MudNumericField T="int?"
                                 Class="p-1"
                                 HideSpinButtons="false"
                                 Label="До"
                                 Value="@PriceTo"
                                 ValueChanged="@(async (e) => await PriceChanged(e.Value))"
                                 Variant="Variant.Outlined"
                                 Min="@PagedList.MinPrice"
                                 Max="@PagedList.MaxPrice"/>
            </div>
            
            <MudRangeSlider T="int?"
                            @bind-Value="@PriceFrom" 
                            @bind-UpperValue="@PriceTo" 
                            Size="Size.Large" 
                            Variant="Variant.Filled" 
                            Range="true" 
                            Step="100"
                            @onchange="@(async (e) => await SendAsync())"
                            Min="PagedList.MinPrice" 
                            Max="PagedList.MaxPrice"/>
        </MudItem>

        <MudItem xs="9">
            <CascadingValue Value="this">
                <CascadingValue Value="FavoriteProducts">
                    <ProductsView PagedList="PagedList"/>
                </CascadingValue>
            </CascadingValue>
            
            @if (PagedList.Items.Count > 0)
            {
                <div class="d-flex flex-column align-center mt-10">
                    <MudPagination Selected="Page" 
                                   SelectedChanged="@SelectedPage"
                                   Rectangular="true" 
                                   Variant="Variant.Filled"
                                   Count="@PageCount" 
                                   Class="my-4" />
                </div>
            }
            
        </MudItem>
        
    </MudGrid>

}
