@using HandmadeShop.Web.Services
@inherits LayoutComponentBase
@inject IConfigurationService ConfigurationService

<MudThemeProvider @bind-IsDarkMode="_isDarkMode"/>
<MudDialogProvider/>
<MudSnackbarProvider/>
            
<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@DrawerToggleAsync" />
        <MudSpacer />
        <MudIconButton Icon="@(_isDarkMode ? Icons.Material.Filled.LightMode : Icons.Material.Filled.DarkMode)" @onclick="@ToggleDarkModeAsync" Color="Color.Inherit" Edge="Edge.End" />
        <HeaderMenu/>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="2">
        <MudDrawerHeader>
            <MudText Typo="Typo.h5" Class="mt-1">Handmade Shop</MudText>
        </MudDrawerHeader>
        <NavMenu/>
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>
@code {
    private bool _drawerOpen = true;
    private bool _isDarkMode;

    protected override async Task OnInitializedAsync()
    {
        _drawerOpen = await ConfigurationService.GetNavigationMenuVisibleAsync();
        _isDarkMode = await ConfigurationService.GetDarkModeAsync();
    }

    private async Task DrawerToggleAsync()
    {
        _drawerOpen = !_drawerOpen;
        await ConfigurationService.SetNavigationMenuVisibleAsync(_drawerOpen);
    }

    private async Task ToggleDarkModeAsync()
    {
        _isDarkMode = !_isDarkMode;
        await ConfigurationService.SetDarkModeAsync(_isDarkMode);
    }
}